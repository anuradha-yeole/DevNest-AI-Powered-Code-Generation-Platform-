Text,SQL
"Retrieve all employees from the ""employees"" table.",SELECT * FROM employees;
"Find the total sales for each product category in the ""products"" table.","SELECT category, SUM(sales) AS total_sales FROM products GROUP BY category;"
"Show the average salary of employees in the ""employee_info"" table.",SELECT AVG(salary) AS average_salary FROM employee_info;
"List all customers who made a purchase in the last month from the ""customer_orders"" table.",SELECT * FROM customer_orders WHERE purchase_date > CURRENT_DATE - INTERVAL '1' MONTH;
"Display the details of orders placed by customer ID 101 from the ""orders"" table.",SELECT * FROM orders WHERE customer_id = 101;
"Identify the number of products in each warehouse from the ""inventory"" table.","SELECT warehouse_id, COUNT(*) AS product_count FROM inventory GROUP BY warehouse_id;"
"List the top 5 highest paid employees from the ""salary_info"" table.",SELECT * FROM salary_info ORDER BY salary DESC LIMIT 5;
"Retrieve the names and prices of products with prices greater than $100 from the ""product_prices"" table.","SELECT name, price FROM product_prices WHERE price > 100;"
"Find customers who have not made any purchases from the ""customer_orders"" table.",SELECT * FROM customer_orders WHERE customer_id NOT IN (SELECT DISTINCT customer_id FROM orders);
"Show the total revenue generated by each product from the ""sales_data"" table.","SELECT product_id, SUM(price * quantity) AS total_revenue FROM sales_data GROUP BY product_id;"
"List employees who joined the company in the last year from the ""employee_info"" table.",SELECT * FROM employee_info WHERE join_date > CURRENT_DATE - INTERVAL '1' YEAR;
"Retrieve orders placed on weekends from the ""order_dates"" table.","SELECT * FROM order_dates WHERE EXTRACT(DOW FROM order_date) IN (0, 6);"
"Display the names of customers who purchased more than 3 products from the ""customer_orders"" table.",SELECT customers.name FROM customers JOIN customer_orders ON customers.customer_id = customer_orders.customer_id GROUP BY customers.customer_id HAVING COUNT(customer_orders.order_id) > 3;
"Find the average order value from the ""order_details"" table.",SELECT AVG(total_price) AS average_order_value FROM order_details;
"Identify the customers who have spent more than $500 in total from the ""customer_orders"" table.","SELECT customer_id, SUM(total_price) AS total_spent FROM customer_orders GROUP BY customer_id HAVING SUM(total_price) > 500;"
"Fetch the product names and quantities from the ""inventory"" table where quantity is less than 10.","SELECT product_name, quantity FROM inventory WHERE quantity < 10;"
"List all unique product categories from the ""products"" table.",SELECT DISTINCT category FROM products;
"Show the total number of employees in each department from the ""employee_info"" table.","SELECT department, COUNT(*) AS employee_count FROM employee_info GROUP BY department;"
"Retrieve the names of customers who placed orders in the last 7 days from the ""customer_orders"" table.",SELECT name FROM customers WHERE purchase_date > CURRENT_DATE - INTERVAL '7' DAY;
"Find the average price of products in each category from the ""products"" table.","SELECT AVG(price) AS average_price, category FROM products GROUP BY category;"
"Display the names and ages of employees who are older than 40 from the ""employee_info"" table.","SELECT name, age FROM employee_info WHERE age > 40;"
"List all products with prices between $50 and $100 from the ""product_prices"" table.","SELECT name, price FROM product_prices WHERE price BETWEEN 50 AND 100;"
"Show the total quantity of each product in stock from the ""inventory"" table.","SELECT product_name, SUM(quantity) AS total_quantity FROM inventory GROUP BY product_name;"
"Identify customers who have made purchases in more than one product category from the ""customer_orders"" table.",SELECT customer_id FROM customer_orders GROUP BY customer_id HAVING COUNT(DISTINCT category) > 1;
"Retrieve the names and hire dates of employees who joined in the last 6 months from the ""employee_info"" table.","SELECT name, hire_date FROM employee_info WHERE join_date > CURRENT_DATE - INTERVAL '6' MONTH;"
"Find the total number of orders placed by each customer from the ""customer_orders"" table.","SELECT customer_id, COUNT(order_id) AS total_orders FROM customer_orders GROUP BY customer_id;"
"Display the product names and prices in descending order of prices from the ""product_prices"" table.","SELECT product_name, price FROM product_prices ORDER BY price DESC;"
"List all employees who have not been assigned to a department from the ""employee_info"" table.",SELECT * FROM employee_info WHERE department IS NULL;
"Show the average rating of products in each category from the ""products"" table.","SELECT AVG(rating) AS average_rating, category FROM products GROUP BY category;"
"Find customers who have made purchases on weekdays from the ""customer_orders"" table.","SELECT name FROM customer_orders WHERE EXTRACT(DOW FROM purchase_date) IN (0, 6);"
"Retrieve the names and ages of employees who have a salary greater than $80,000 from the ""salary_info"" table.","SELECT name, age FROM employee_info WHERE salary > 80000;"
"Identify the customers who have spent the most in total from the ""customer_orders"" table.",SELECT customer_id FROM customer_orders ORDER BY total_price DESC LIMIT 1;
"List the product names and their respective suppliers from the ""product_suppliers"" table.","SELECT product_name, supplier_name FROM product_suppliers;"
"Show the total number of orders placed each month from the ""customer_orders"" table.","SELECT EXTRACT(MONTH FROM order_date) AS month, COUNT(*) AS total_orders FROM customer_orders GROUP BY EXTRACT(MONTH FROM order_date);"
"Find the employees with the highest and lowest salaries from the ""salary_info"" table.","SELECT MAX(salary), MIN(salary) FROM salary_info;"
"Display the names of customers who have not made any purchases in the last 3 months from the ""customer_orders"" table.",SELECT name FROM customers WHERE purchase_date < CURRENT_DATE - INTERVAL '3' MONTH;
"Retrieve the product names and quantities where quantities are greater than the average quantity from the ""inventory"" table.","SELECT product_name, quantity FROM inventory WHERE quantity > (SELECT AVG(quantity) FROM inventory);"
"List all products with a rating above 4.5 from the ""product_ratings"" table.","SELECT product_name, rating FROM product_ratings WHERE rating > 4.5;"
"Show the total sales for each region from the ""sales_data"" table.","SELECT region, SUM(sales) AS total_sales FROM sales_data GROUP BY region;"
"Find the average salary of employees in each department from the ""employee_info"" table.","SELECT AVG(salary) AS average_salary, department FROM employee_info GROUP BY department;"
"Identify the customers who have made purchases on weekends from the ""customer_orders"" table.","SELECT name FROM customer_orders WHERE EXTRACT(DOW FROM purchase_date) IN (0, 6);"
"Retrieve the names of employees who have been with the company for more than 10 years from the ""employee_info"" table.","SELECT name, age FROM employee_info WHERE years_with_company > 10;"
"Display the names and ages of employees who are between 30 and 40 years old from the ""employee_info"" table.","SELECT name, age FROM employee_info WHERE age BETWEEN 30 AND 40;"
"List all products with no stock available from the ""inventory"" table.",SELECT product_name FROM inventory WHERE quantity = 0;
"Show the total revenue generated by each supplier from the ""supplier_sales"" table.","SELECT supplier_name, SUM(revenue) AS total_revenue FROM supplier_sales GROUP BY supplier_name;"
"Find the average order value for each customer from the ""customer_orders"" table.","SELECT AVG(total_price) AS average_order_value, customer_id FROM customer_orders GROUP BY customer_id;"
"Retrieve the names and prices of the three most expensive products from the ""product_prices"" table.","SELECT name, price FROM product_prices ORDER BY price DESC LIMIT 3;"
"Identify the customers who have made purchases in every product category from the ""customer_orders"" table.",SELECT customer_id FROM customer_orders GROUP BY customer_id HAVING COUNT(DISTINCT category) = (SELECT COUNT(DISTINCT category) FROM products);
"List all employees who have attended training sessions in the last month from the ""training_data"" table.",SELECT name FROM employee_training WHERE training_date > CURRENT_DATE - INTERVAL '1' MONTH;
"Display the names of customers who have made multiple purchases in a single day from the ""customer_orders"" table.","SELECT name FROM customer_orders GROUP BY customer_id, purchase_date HAVING COUNT(order_id) > 1;"
"Find the products with the highest and lowest sales quantities from the ""sales_data"" table.","SELECT product_name, MAX(quantity) AS max_quantity, MIN(quantity) AS min_quantity FROM sales_data GROUP BY product_name;"
"Show the total number of products in stock for each supplier from the ""inventory"" table.","SELECT supplier_name, COUNT(product_name) AS total_products FROM inventory GROUP BY supplier_name;"
"Retrieve the names of customers who have not made any purchases in the last 6 months from the ""customer_orders"" table.",SELECT name FROM customers WHERE purchase_date < CURRENT_DATE - INTERVAL '6' MONTH;
"List the top 10 best-selling products from the ""sales_data"" table.",SELECT product_name FROM sales_data ORDER BY quantity_sold DESC LIMIT 10;
"Find the average salary of employees who have completed a specific certification from the ""employee_certifications"" table.",SELECT AVG(salary) AS average_salary FROM employee_info WHERE certification = 'Specific Certification';
"Identify the customers who have made purchases in every month of the last year from the ""customer_orders"" table.","SELECT customer_id FROM customer_orders WHERE EXTRACT(MONTH FROM purchase_date) IN (1, 2, 3);"
"Display the names and ages of employees who have been promoted in the last 6 months from the ""employee_promotions"" table.","SELECT name, age FROM employee_promotions WHERE promotion_date > CURRENT_DATE - INTERVAL '6' MONTH;"
"Retrieve the names and prices of products that were released in the last 3 months from the ""new_products"" table.","SELECT name, price FROM new_products WHERE release_date > CURRENT_DATE - INTERVAL '3' MONTH;"
"Find the average order value for each product category from the ""customer_orders"" table.","SELECT AVG(total_price) AS average_order_value, category FROM customer_orders GROUP BY category;"
"Show the total number of products sold by each employee from the ""employee_sales"" table.","SELECT employee_id, SUM(quantity) AS total_sold FROM employee_sales GROUP BY employee_id;"
"Find the number of distinct departments in the ""employees"" table.",SELECT DISTINCT department FROM employees;
"Show the total quantity sold for each product in the ""sales_data"" table.","SELECT product, SUM(quantity) AS total_quantity FROM sales_data GROUP BY product;"
"Retrieve the average rating of all products in the ""product_reviews"" table.",SELECT AVG(rating) AS average_rating FROM product_reviews;
"List all orders placed in the last 7 days from the ""order_dates"" table.",SELECT * FROM order_dates WHERE order_date > CURRENT_DATE - INTERVAL '7' DAY;
"Display the names and prices of products with prices less than $50 from the ""product_prices"" table.","SELECT name, price FROM product_prices WHERE price < 50;"
"Identify the number of unique customers in the ""customer_info"" table.",SELECT COUNT(DISTINCT customer_id) FROM customer_info;
"List the employees with a salary above the department average from the ""salary_info"" table.",SELECT * FROM salary_info WHERE salary > (SELECT AVG(salary) FROM salary_info);
"Find the total cost of products in each category from the ""product_costs"" table.","SELECT category, SUM(cost) AS total_cost FROM product_costs GROUP BY category;"
"Show the details of orders placed by customer ID 202 from the ""orders"" table.",SELECT * FROM orders WHERE customer_id = 202;
"Retrieve the names and quantities of products with quantities greater than 10 from the ""inventory"" table.","SELECT name, quantity FROM inventory WHERE quantity > 10;"
"Find the average age of employees in the ""employee_info"" table.",SELECT AVG(age) AS average_age FROM employee_info;
"List all customers who made a purchase in the last 3 months from the ""customer_orders"" table.",SELECT * FROM customer_orders WHERE purchase_date > CURRENT_DATE - INTERVAL '3' MONTH;
"Display the names and salaries of employees in the ""employee_info"" table.","SELECT name, salary FROM employee_info;"
"Find customers who have made purchases in more than one category from the ""customer_orders"" table.",SELECT customer_id FROM customer_orders GROUP BY customer_id HAVING COUNT(DISTINCT category) > 1;
"Identify the products with no sales in the last month from the ""sales_data"" table.",SELECT * FROM sales_data WHERE quantity_sold = 0 AND sale_date > CURRENT_DATE - INTERVAL '1' MONTH;
"Retrieve the total revenue generated by each customer from the ""customer_orders"" table.","SELECT customer_id, SUM(total_price) AS total_revenue FROM customer_orders GROUP BY customer_id;"
"Show the names of products with names containing ""electronics"" from the ""products"" table.",SELECT name FROM products WHERE name ILIKE '%electronics%';
"Find the employees who have not taken any leave from the ""leave_records"" table.",SELECT * FROM leave_records WHERE leave_taken = 0;
"List the top 10 most purchased products from the ""sales_data"" table.","SELECT name, quantity_sold FROM sales_data ORDER BY quantity_sold DESC LIMIT 10;"
"Show the average satisfaction rating for each department from the ""employee_feedback"" table.",SELECT AVG(satisfaction_rating) AS average_satisfaction FROM employee_feedback GROUP BY department;
"Retrieve all orders placed on weekdays from the ""order_dates"" table.","SELECT * FROM order_dates WHERE EXTRACT(DOW FROM order_date) IN (1, 2, 3, 4, 5);"
"Display the names of customers who have made a purchase on weekends from the ""customer_orders"" table.","SELECT name FROM customer_orders WHERE EXTRACT(DOW FROM purchase_date) IN (0, 6);"
"Find the number of orders placed by each customer in the ""customer_orders"" table.","SELECT customer_id, COUNT(*) AS num_orders FROM customer_orders GROUP BY customer_id;"
"List the products with a quantity on hand less than the reorder level from the ""inventory"" table.",SELECT * FROM inventory WHERE quantity_on_hand < reorder_level;
"Show the total sales for each month in the last year from the ""sales_data"" table.","SELECT EXTRACT(MONTH FROM sale_date) AS month, SUM(total_sales) AS monthly_sales FROM sales_data WHERE sale_date > CURRENT_DATE - INTERVAL '1' YEAR GROUP BY EXTRACT(MONTH FROM sale_date);"
"Retrieve the names and prices of the 3 most expensive products from the ""product_prices"" table.","SELECT name, price FROM product_prices ORDER BY price DESC LIMIT 3;"
"Identify the customers who made the first purchase in the ""customer_orders"" table.",SELECT customer_id FROM customer_orders GROUP BY customer_id HAVING MIN(purchase_date) = purchase_date;
"Find the average order processing time in hours from the ""order_dates"" table.",SELECT AVG(processing_time) AS average_processing_time FROM order_dates;
"List all employees who have been promoted in the last 6 months from the ""employee_info"" table.",SELECT * FROM employee_info WHERE promotion_date > CURRENT_DATE - INTERVAL '6' MONTH;
"Show the total quantity sold for each product category in the last quarter from the ""sales_data"" table.","SELECT category, SUM(quantity) AS total_quantity FROM sales_data WHERE sale_date > CURRENT_DATE - INTERVAL '1' QUARTER GROUP BY category;"
"Retrieve the names and salaries of employees with salaries above $80,000 from the ""salary_info"" table.","SELECT name, salary FROM salary_info WHERE salary > 80000;"
"Find the customers who have made purchases on at least 3 different occasions from the ""customer_orders"" table.",SELECT customer_id FROM customer_orders GROUP BY customer_id HAVING COUNT(DISTINCT purchase_date) > 3;
"Display the names and prices of products with prices between $50 and $100 from the ""product_prices"" table.","SELECT name, price FROM product_prices WHERE price BETWEEN 50 AND 100;"
"Find the number of distinct job titles in the ""employee_info"" table.",SELECT DISTINCT job_title FROM employee_info;
"Show the total revenue generated by each customer in the ""customer_orders"" table.","SELECT customer_id, SUM(total_price) AS total_revenue FROM customer_orders GROUP BY customer_id;"
"Retrieve the names and prices of products with prices between $30 and $70 from the ""product_prices"" table.","SELECT name, price FROM product_prices WHERE price BETWEEN 30 AND 70;"
"List the employees who have not taken any training sessions from the ""training_records"" table.",SELECT * FROM employee_info WHERE employee_id NOT IN (SELECT DISTINCT employee_id FROM training_records);
"Display the names and salaries of employees with salaries above $70,000 from the ""salary_info"" table.","SELECT name, salary FROM salary_info WHERE salary > 70000;"
"Find the products with a quantity on hand less than the safety stock from the ""inventory"" table.",SELECT name FROM inventory WHERE quantity_on_hand < safety_stock;
"Show the total quantity sold for each product category in the last 3 months from the ""sales_data"" table.","SELECT category, SUM(quantity) AS total_quantity FROM sales_data WHERE sale_date > CURRENT_DATE - INTERVAL '3' MONTH GROUP BY category;"
"Retrieve the names and salaries of the 5 lowest paid employees from the ""salary_info"" table.","SELECT name, salary FROM salary_info ORDER BY salary LIMIT 5;"
"Identify the customers who have made purchases on weekdays from the ""customer_orders"" table.","SELECT customer_id FROM customer_orders WHERE EXTRACT(DOW FROM purchase_date) IN (1, 2, 3, 4, 5);"
"List the employees who have been with the company for more than 5 years from the ""employee_info"" table.",SELECT * FROM employee_info WHERE join_date < CURRENT_DATE - INTERVAL '5' YEAR;
"Show the average satisfaction rating for each department from the ""employee_feedback"" table.","SELECT department, AVG(satisfaction_rating) AS average_satisfaction FROM employee_feedback GROUP BY department;"
"Retrieve the names and prices of products with prices ending in "".95"" from the ""product_prices"" table.","SELECT name, price FROM product_prices WHERE price LIKE '%.95';"
"Find the number of orders placed by each customer in the last month from the ""customer_orders"" table.","SELECT customer_id, COUNT(*) AS num_orders FROM customer_orders WHERE purchase_date > CURRENT_DATE - INTERVAL '1' MONTH GROUP BY customer_id;"
"Display the names and quantities of products with quantities sold greater than 50 from the ""sales_data"" table.","SELECT name, quantity_sold FROM sales_data WHERE quantity_sold > 50;"
"Identify the products with a quantity on hand less than the reorder level from the ""inventory"" table.",SELECT name FROM inventory WHERE quantity_on_hand < reorder_level;
